name: Build and Deploy

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --prefer-frozen-lockfile

      - name: Verify dependency integrity
        run: |
          echo "üì¶ Checking installed package versions..."
          pnpm list framer-motion typescript
          echo "üìù Verifying lockfile consistency..."
          pnpm install --frozen-lockfile --dry-run || echo "‚ö†Ô∏è Lockfile regenerated during install"

      - name: Run pre-build validation
        run: pnpm run pre-build-check

      - name: Type check
        run: pnpm typecheck

      - name: Lint
        run: pnpm lint

      - name: Build project
        env:
          # Build-time environment variables (safe placeholders)
          NODE_ENV: production
          NEXT_PUBLIC_APP_URL: https://tripthesia.vercel.app
          DATABASE_URL: postgresql://build:build@localhost:5432/build
          UPSTASH_REDIS_REST_URL: https://build.upstash.io
          UPSTASH_REDIS_REST_TOKEN: build_token
          NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY: pk_build_key
          CLERK_SECRET_KEY: sk_build_key
          OPENAI_API_KEY: sk-build-key
          FOURSQUARE_API_KEY: build_key
          NEXT_PUBLIC_MAPBOX_TOKEN: pk.build_token
          RAZORPAY_KEY_ID: rzp_build_key
          RAZORPAY_KEY_SECRET: build_secret
          NEXT_PUBLIC_RAZORPAY_KEY_ID: rzp_build_key
          # Flight API credentials (build-safe placeholders)
          AMADEUS_CLIENT_ID: build_amadeus_client
          AMADEUS_CLIENT_SECRET: build_amadeus_secret
          RAPIDAPI_KEY: build_rapidapi_key
        run: pnpm build

      - name: Verify build artifacts
        run: |
          echo "üì¶ Build artifacts:"
          ls -la .next/
          echo "üìä Build stats:"
          du -sh .next/

      - name: Build success
        run: echo "üéâ Build completed successfully!"

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
      - name: Deploy to Production
        run: echo "üöÄ Ready for production deployment!"